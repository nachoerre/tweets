{"version":3,"sources":["firebase/Firebase.js","pictures/buttonGoogle.svg","components/logging/Logging.js","components/welcome/Welcome.js","pictures/logo.svg","components/start/Start.js","pictures/full-heart.svg","pictures/emptyHeart.svg","pictures/garbage.svg","components/tweetCard/TweetCard.js","pictures/header-title.svg","pictures/post.svg","pictures/smalllogo.svg","components/feed/Feed.js","pictures/arrow.svg","pictures/imglogout.svg","components/userProfile/UserProfile.js","app/App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","googleLogin","signInWithPopup","getCurrentUser","currentUser","Logging","className","type","onClick","src","buttonGoogle","alt","Welcome","navigate","useNavigate","user","useState","buttonDisable","setButtonDisable","color","setColor","loading","setLoading","userName","setUserName","colorChange","e","currentTarget","dataset","useEffect","displayName","placeholder","onChange","target","value","maxLength","setTimeout","collection","doc","uid","set","name","email","username","alert","disabled","Start","logo","TweetCard","tweet","id","likesCount","userId","month","liked","setLiked","checkLike","get","data","then","snapshot","handleLike","update","docRef","delete","tweetId","date","photo","newDate","Date","getDate","getMonth","tweetDate","window","confirm","where","forEach","ref","garbage","fullHeart","emptyHeart","Feed","author","setTweet","tweetValue","setTweetValue","tweets","setTweets","tweetLength","onAuthStateChanged","unsuscribeTweets","orderBy","onSnapshot","docs","map","console","error","photoURL","smallLogo","headerTitle","newTweet","getTime","getMinutes","getSeconds","min","max","style","width","preventDefault","add","post","UserProfile","isDark","setIsDark","handlePosts","postedTweets","key","handleFavorite","userLikes","Promise","all","otherTweet","favTweets","unsuscribePosts","arrow","signOut","imglogout","App","setUser","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ed0db59.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAO6FJjCnr1MvwCpaAr1sH3iBUjnf3h3kA\",\r\n  authDomain: \"tweets-nacho.firebaseapp.com\",\r\n  projectId: \"tweets-nacho\",\r\n  storageBucket: \"tweets-nacho.appspot.com\",\r\n  messagingSenderId: \"289657698189\",\r\n  appId: \"1:289657698189:web:ff50f2a5e832ac740aafc4\",\r\n  measurementId: \"G-3Z2XSKMCHD\"\r\n};\r\n\r\n// Initialize Firebase\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\n//module of authentication\r\nexport const auth = firebase.auth();\r\n// provider of authentication\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n// enable to login using Google pop-up\r\nexport const googleLogin = () => auth.signInWithPopup(provider);\r\n// enable to logout\r\nexport const logout = () => auth.signOut();\r\n\r\nexport const isLogged = () => {\r\n  return (auth.currentUser !== null && auth.currentUser.uid !== null);\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  return auth.currentUser;\r\n};\r\n\r\nexport default firebase;","export default __webpack_public_path__ + \"static/media/buttonGoogle.f2256fdf.svg\";","//Firebase\nimport { googleLogin } from '../../firebase/Firebase';\n\n//imgs\nimport buttonGoogle from '../../pictures/buttonGoogle.svg';\n\n//style\nimport './Logging.css';\n\nfunction Logging() {\n\n  return (\n    <>\n      <div className=\"logging-container\">\n        <h1 className=\"welcome-title\">Bienvenido a Devs_united!</h1>\n        <h4 className=\"logging-title\">Registrate ahora!</h4>\n        <button type=\"button\" onClick={googleLogin} className=\"button-logging\">\n          <img src={buttonGoogle} className=\"google-button\" alt='googleButton'></img>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Logging;\n\n\n","//Firebase\nimport { firestore, getCurrentUser } from '../../firebase/Firebase';\n\n//React\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n//styles\nimport './Welcome.css';\nimport '../../app/App.css';\n\nfunction Welcome() {\n\n  let navigate = useNavigate();\n  let user = getCurrentUser();\n\n  const [buttonDisable, setButtonDisable] = useState(true);\n  const [color, setColor] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n\n  const userChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const colorChange = (e) => {\n    setColor(e.currentTarget.dataset.color);\n  };\n\n  const continueClick = (e) => {\n    if (color !== \"\" && userName.length !== 0) {\n      setLoading(true)\n      setTimeout(function () {\n        firestore\n        .collection('users')\n        .doc(user.uid)\n        .set({ name:user.displayName, email:user.email, color:color, username:userName })\n        setLoading(false)\n        navigate('/feed')\n      }, 2000);\n    } else {\n      alert(\"You need to pick a user name and a color!\")\n    }\n  };\n\n  useEffect(() => {\n    if (color !== \"\" && userName.length !== 0)\n    setButtonDisable(false);\n  }, [color, userName])\n\n\n  return (\n    <> \n      {loading ? \n      <div  className=\"loader\"></div> : \n      <div className=\"welcome-container\">\n        <div>\n          <span className=\"welcome\">WELCOME </span>\n          <span className=\"welcome beta\">{user.displayName}!</span>\n        </div>\n        <input \n          type=\"text\" \n          placeholder=\"Type your username\" \n          className=\"username\" \n          onChange={userChange}\n          maxLength=\"18\">\n        </input>\n        <div className=\"p-select-color\">Select your favorite color</div>\n        <div className=\"colors-container\"> \n          <button className=\"color-button beta-background\" type=\"button\" onClick={colorChange} data-color=\"beta\">\n          </button>\n          <button className=\"color-button orange\" type=\"button\" onClick={colorChange} data-color=\"orange\">\n          </button>\n          <button className=\"color-button yellow\" type=\"button\" onClick={colorChange} data-color=\"yellow\">\n          </button>\n          <button className=\"color-button green\" type=\"button\" onClick={colorChange} data-color=\"green\">\n          </button>\n          <button className=\"color-button blue\" type=\"button\" onClick={colorChange} data-color=\"blue\">\n          </button>\n          <button className=\"color-button purple\" type=\"button\" onClick={colorChange} data-color=\"purple\">\n          </button>\n        </div>\n        <button \n          type=\"button\" \n          className=\"continue-button\"\n          onClick={continueClick}\n          disabled={buttonDisable}>\n          CONTINUE\n        </button>\n      </div>\n      }\n    </>\n  );\n}\n\nexport default Welcome;","export default __webpack_public_path__ + \"static/media/logo.d70e54fc.svg\";","// components\nimport Logging from '../logging/Logging';\nimport Welcome from '../welcome/Welcome';\n\n//Firebase\nimport { isLogged } from '../../firebase/Firebase';\n\n//imgs\nimport logo from '../../pictures/logo.svg';\n\n//styles\nimport './Start.css';\nimport '../../app/App.css';\n\nfunction Start() { \n    \n  return (\n    <>\n      <div className=\"start-page\">\n        <div className=\"logo-container\">\n          <img src={logo} className=\"logo\" alt='logo'></img>\n        </div>\n        <div className=\"is-logged-container\">\n          {isLogged() ? <Welcome/> : <Logging/>}\n          <div className=\"copyright-footer\">\n            <span className=\"copyright\">© 2020 Devs_United - </span>\n            <span className=\"copyright beta\">BETA</span>\n          </div>\n        </div>\n      </div>\n        \n    </>\n  );\n}\n\nexport default Start;","export default __webpack_public_path__ + \"static/media/full-heart.cfe63298.svg\";","export default __webpack_public_path__ + \"static/media/emptyHeart.0a53b79e.svg\";","export default __webpack_public_path__ + \"static/media/garbage.521b1cb8.svg\";","//Firebase\r\nimport { firestore, getCurrentUser } from \"../../firebase/Firebase\";\r\n\r\n//icons\r\nimport fullHeart from '../../pictures/full-heart.svg'\r\nimport emptyHeart from '../../pictures/emptyHeart.svg'\r\nimport garbage from '../../pictures/garbage.svg'\r\n\r\n//React\r\nimport { useEffect, useState } from \"react\";\r\n\r\n//styles\r\nimport \"./TweetCard.css\";\r\n\r\nexport function TweetCard({ tweet }) {\r\n  const { id, likesCount, userId } = tweet;\r\n\r\n  const user = getCurrentUser();\r\n  const month = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\r\n\r\n  \r\n  const [buttonDisable, setButtonDisable] = useState(false);\r\n  const [color, setColor]= useState(\"\");\r\n  const [liked, setLiked] = useState();\r\n  const [userName, setUserName] = useState(\"\");\r\n  \r\n  const checkLike = async () => {\r\n    const doc = await firestore.doc(`likes/${user?.uid}-${tweet.id}`).get();\r\n    const isLiked = doc.data();\r\n    if (!!isLiked) {\r\n      setLiked(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .doc(`users/${tweet.userId}`)\r\n      .get()\r\n      .then((snapshot)=>{\r\n        setColor(snapshot.data().color)\r\n        setUserName (snapshot.data().username)\r\n      })\r\n\r\n    checkLike();\r\n  },[]);\r\n\r\n  // Borra el documento en Firebase por su id\r\n  const handleDelete = () => {\r\n    let option = window.confirm(\"¿Seguro que quiere borrar su Tweet?\");\r\n    if (option) {\r\n      firestore.doc(`tweets/${id}`).delete();\r\n      firestore\r\n        .collection(\"likes\")\r\n        .where(\"tweetId\", \"==\", id)\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.forEach((doc) => {\r\n            doc.ref.delete();\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  // Actualiza el documento de relacion de likes\r\n  const handleLike = async () => {\r\n    setButtonDisable(true);\r\n    firestore\r\n      .doc(`tweets/${tweet.id}`)\r\n      .update({ likesCount: liked ? likesCount - 1 : likesCount + 1});\r\n    const docRef = `likes/${user.uid}-${id}`;\r\n    if (liked) {\r\n      setLiked(false);\r\n      firestore.doc(docRef).delete();\r\n    } else {\r\n      setLiked(true);\r\n      firestore.doc(docRef).set({ userId:user.uid, tweetId:tweet.id, date:tweet.date });\r\n    }\r\n    setButtonDisable(false);\r\n  };\r\n\r\n  const tweetDate = (date) => {\r\n    const newDate = new Date(date);\r\n      return `${newDate.getDate()}${month[newDate.getMonth()]}`;\r\n  };\r\n\r\n  return (\r\n    <div key={tweet.id} className='tweet-card'>\r\n      <img className='tweet-user-img' src={tweet.photo} alt=\"Tweet user\" />\r\n      <div className='tweet-container'>\r\n        <div className='tweet-header'>\r\n          <div>  \r\n            <h1 className={`username-${color}`}>{userName}</h1>\r\n            <span className='date'>- {tweetDate(tweet.date)}.</span>\r\n          </div>\r\n          {\r\n          userId === user?.uid ?\r\n          <button onClick={() => handleDelete()} className='garbage'>\r\n            <img src={garbage} className='garbage' alt=\"garbage\"></img>\r\n          </button> : <></>\r\n          }\r\n        </div>\r\n        <h4>{tweet.tweet}</h4>\r\n        {\r\n          user != null ?\r\n            <div className='tweet-footer'>\r\n              <button onClick={handleLike} className='heart-button' disabled={buttonDisable}>\r\n                {liked ? \r\n                <img src={fullHeart} className='full-heart heart-button' alt=\"full-heart\"></img> :\r\n                <img src={emptyHeart} className='empty-heart heart-button' alt=\"empty-heart\"></img>\r\n                }\r\n              </button>\r\n              <span className={`likes-number ${liked ? 'red-number' : ''}`}>{tweet.likesCount ?? 0}</span>\r\n            </div> :\r\n            <div className={`likes-number ${liked ? 'red-number' : ''}`}>{tweet.likesCount ?? 0}</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/header-title.0f17436c.svg\";","export default __webpack_public_path__ + \"static/media/post.dbd261de.svg\";","export default __webpack_public_path__ + \"static/media/smalllogo.5038d75e.svg\";","//components\r\nimport { TweetCard } from \"../tweetCard/TweetCard\";\r\n\r\n//Firebase\r\nimport {auth, firestore, getCurrentUser} from \"../../firebase/Firebase\";\r\n\r\n//imgs\r\nimport headerTitle from '../../pictures/header-title.svg'\r\nimport post from '../../pictures/post.svg'\r\nimport smallLogo from '../../pictures/smalllogo.svg'\r\n\r\n\r\n//React\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//styles\r\nimport \"./Feed.css\";\r\n\r\n//problema de ejecucion en useEffect\r\nfunction Feed() {\r\n\r\n  let navigate = useNavigate();\r\n  let user = getCurrentUser();\r\n\r\n  const goToProfile = (e) =>{\r\n    navigate('/userprofile')\r\n  }\r\n\r\n  const [color, setColor] = useState (\"\");\r\n  \r\n  // Estructura del tweet que creamos para enviar a Firebase\r\n  const [tweet, setTweet] = useState({\r\n    author: '',\r\n    likesCount: 0,\r\n    photo: '',\r\n    tweet: '',\r\n    user: user !== null ?  user.uid : \"\",\r\n    id:'',\r\n  });\r\n\r\n  const [tweetValue, setTweetValue] = useState(''); \r\n\r\n  // Estado local para los tweets que hay en firebase\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  //Variable para darle estilo a la barra de input completado\r\n  let tweetLength = (tweetValue.length)/2 + '%';\r\n  \r\n  // Crea la conexión para escuchar cambios en el documento de Firebase\r\n  const tweetsListener = () =>\r\n    firestore.collection(\"tweets\").orderBy(\"date\", \"desc\").onSnapshot(\r\n      (snapshot) => {\r\n        const tweets = snapshot.docs.map((doc) => {\r\n          return {\r\n            ...doc.data(),\r\n            id: doc.id,\r\n          };\r\n        },\r\n        () => {\r\n          console.error(\"Sucedio un error\");\r\n        }\r\n        );\r\n        setTweets(tweets);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    \r\n  // Actualiza el estado local del tweet que vamos a enviar a Firebase\r\n  const handleNewTweet = (e) => {\r\n    const date = new Date();\r\n    let newTweet = {\r\n      ...tweet,\r\n      author: user.displayName,\r\n      photo: user.photoURL,\r\n      tweet: e.target.value,\r\n      userId: user.uid,\r\n      date: date.getTime() + date.getMinutes() + date.getSeconds(),\r\n    }\r\n    setTweet(newTweet);\r\n    setTweetValue(newTweet.tweet)\r\n  }\r\n  \r\n  // Envia el tweet local a Firebase\r\n  const sendTweet = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      firestore.collection(\"tweets\").add(tweet);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    setTweetValue('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user !== null) {\r\n        firestore\r\n        .doc(`users/${user.uid}`)\r\n        .get()\r\n        .then((snapshot) => { \r\n          setColor(snapshot.data().color);\r\n        })\r\n        const unsuscribeTweets = tweetsListener();\r\n        return () => {\r\n          // Limpiamos el listener creado cuando se desmonta el componente\r\n          unsuscribeTweets();\r\n        };\r\n      } else {navigate('/tweets')}\r\n    })\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"header\">\r\n        <div className=\"header-container\">\r\n          <button type=\"button\" className='header-user' onClick={goToProfile}>\r\n            <img src={user?.photoURL} className={`header-user border-${color}`} alt=\"Header user\"></img>\r\n          </button>\r\n          <img src={smallLogo} className=\"small-logo\" alt=\"Small Logo\"></img>\r\n          <div>\r\n            <img src={headerTitle} className=\"header-title\" alt=\"Header title\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"tweets-container\">\r\n        <div className=\"input-container\">\r\n          <div className=\"input-block\">\r\n            <img src={user?.photoURL} alt='User' className='form-user'></img>\r\n            <form className=\"form-container\">\r\n              <textarea \r\n                onChange={handleNewTweet} \r\n                className='text-area'\r\n                placeholder=\"What's happening?\"\r\n                value={tweetValue} \r\n                name='tweet'\r\n                min='0'\r\n                max='200'\r\n                maxLength='200'>\r\n              </textarea>\r\n                <div className='tweet-length-bar' style={{width: tweetLength}}></div>\r\n              <div className=\"text-area-details\">\r\n                <span className=\"tweet-length\">{tweetValue.length}</span>\r\n                <span className=\"max-tweet-length\">200 max.</span>\r\n              </div>\r\n              <div className=\"post-button-container\">\r\n                <button type='submit' onClick={sendTweet} disabled={!tweetValue} className='post-button'>\r\n                  <img src={post} className='post-img' alt=\"post-button\"></img>\r\n                </button> \r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"tweets-list\">\r\n          {tweets.map((tweet) => {\r\n            return <TweetCard key={tweet.id} tweet={tweet} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;","export default __webpack_public_path__ + \"static/media/arrow.67f326fd.svg\";","export default __webpack_public_path__ + \"static/media/imglogout.a36fdd73.svg\";","//components\nimport { TweetCard } from '../tweetCard/TweetCard';\n\n//Firebase\nimport {auth, firestore, getCurrentUser, logout} from '../../firebase/Firebase';\n\n//imgs\nimport arrow from '../../pictures/arrow.svg';\nimport imglogout from '../../pictures/imglogout.svg';\n\n//React\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\n//style\nimport './UserProfile.css';\n\nfunction UserProfile() { \n\n  let navigate = useNavigate();\n  let user = getCurrentUser();\n\n  const [color, setColor] = useState (\"\")\n  const [isDark, setIsDark] = useState(false);\n  const [tweets, setTweets] = useState([]);\n  const [userName, setUserName] = useState (\"\")\n\n  const onClickLogout = (e) => {\n    logout();\n    navigate('/');\n  };\n\n  const onClickBack = (e) => {\n    navigate('/feed');\n  };\n\n  const handlePosts = () => {\n    auth.onAuthStateChanged((user) =>  {\n      if (user !== null) {\n        firestore\n        .collection('tweets').orderBy(\"date\", \"desc\")\n        .where(\"user\", \"==\", user.uid)\n        .onSnapshot((snapshot)=>{\n          const postedTweets = snapshot.docs.map((doc) => {\n            return {\n              ...doc.data(),\n              key: doc.id,\n              id: doc.id,\n              photoURL: user.photoURL\n            };\n          })\n          setIsDark(true);\n          setTweets(postedTweets);\n        })\n      }\n    })\n  }\n\n  const handleFavorite = async () => {\n    setIsDark(false);\n    let userLikes = await firestore\n      .collection('likes')\n      .orderBy(\"date\", \"desc\")\n      .where(\"userId\", \"==\", user.uid)\n      .get()\n      let favTweets = await Promise.all (userLikes.docs.map(async (doc) => {\n        const tweetId = doc.data().tweetId;\n        const otherTweet = await firestore.doc(`tweets/${tweetId}`).get();\n        return {\n          ...otherTweet.data(),\n          key: otherTweet.id,\n          id: otherTweet.id\n        };\n      }))\n      setTweets(favTweets);\n  }\n  \n  \n  useEffect(() => {\n    auth.onAuthStateChanged((user) =>  {\n      if (user !== null) {\n        firestore\n        .doc(`users/${user.uid}`)\n        .get()\n        .then((snapshot)=>{\n          setColor(snapshot.data().color);\n          setUserName (snapshot.data().username);\n        });\n        const unsuscribePosts = handlePosts();\n        return () => {\n          // Limpiamos el listener creado cuando se desmonta el componente\n          unsuscribePosts();\n        };\n      } else {navigate('/tweets')};\n    })\n  }, []);\n\n  return (\n    <div className='profile-container'>\n      <div className=\"profile-header-container\">\n        <div className=\"profile-header\">\n          <button type=\"button\" className='back-button' onClick={onClickBack}>\n            <div className=\"back-div\">\n              <img src={arrow} className='arrow' alt='arrow'></img>\n              <div className=\"header-username\">{userName}</div>\n            </div>\n          </button>\n          <button type=\"button\" className=\"button-logout\" onClick={onClickLogout}>\n            LOGOUT\n            <img src={imglogout} className='img-logout' alt='logout'></img>\n          </button>\n        </div>\n      </div>\n      <div className=\"profile-main-container\">\n        <div className=\"profile-main\">\n          <img src={user?.photoURL} className={`profile-photo border-${color}`} alt='user'></img>\n          <div className={`user-color username-${color}`}>{userName}</div>\n          <div className=\"tabs-buttons\">\n            <button \n              type=\"button\" \n              onClick={handlePosts} \n              className={`tabs ${isDark ? 'tabs-light': ''}` }\n              >POSTS\n            </button>\n            <button \n              type=\"button\" \n              onClick={handleFavorite} \n              className={`tabs ${isDark ? '': 'tabs-light'}` }\n              >FAVORITES\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweets-list\">\n        {tweets.map((tweet) => {\n          return (\n            <TweetCard \n              key={tweet.id} \n              tweet={tweet} />\n          );\n        })}\n      </div>\n    </div>\n  )\n}\nexport default UserProfile;","//components\nimport Start from '../components/start/Start';\nimport Feed from '../components/feed/Feed';\nimport UserProfile from '../components/userProfile/UserProfile';\n\n//Firebase\nimport { auth } from '../firebase/Firebase';\n\n//React\nimport { useEffect, useState } from 'react';\nimport { Routes, Route} from \"react-router-dom\";\n\n//styles\nimport './App.css';\n\nfunction App() {\n  \n  const [user, setUser] = useState(null)\n\n  useEffect (()=>{\n    auth.onAuthStateChanged((user)=>{\n      setUser(user);\n    })\n  },[])\n\n  return (\n  <div className=\"app\">\n      <Routes>\n        <Route exact path=\"/\" element={<Start/>}/> \n        <Route path=\"/feed\"element={<Feed/>}/>\n        <Route path=\"/userprofile\"element={<UserProfile/>}/>\n        <Route path=\"/tweets\" element={<Start/>}/>\n      </Routes>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}